import React, { useState } from 'react';
import './LearningPage.css';
import LearningCard from '../../components/LearningCard/Card';
import Chat from '../../components/Chat/Chat';

const ExplainDoc = ({ name }) => {
  // Two independent panels: Estrutura and Boas pr√°ticas
  const [openStructure, setOpenStructure] = useState(false);
  const [openPractices, setOpenPractices] = useState(false);

  return (
    <>
      {/* Estrutura panel */}
      <div className={`panel ${openStructure ? 'active' : ''}`}>
        <div className="estructureDocs">
          <button
            onClick={() => setOpenStructure(s => !s)}
            aria-expanded={openStructure}
          >
            <span>Estrutura do {name}</span>
          </button>
        </div>

        <div className="estructureDocs">
          {openStructure ? (
            <div className='contentLearning'>Conte√∫do da estrutura do {name} (ex.: se√ß√µes, t√≠tulos e exemplos).</div>
          ) : null}
        </div>
      </div>

      {/* Boas pr√°ticas panel */}
      <div className={`panel ${openPractices ? 'active' : ''}`}>
        <div className="estructureDocs">
          <button
            onClick={() => setOpenPractices(s => !s)}
            aria-expanded={openPractices}
          >
            <span>Boas pr√°ticas</span>
          </button>
        </div>

        <div className="estructureDocs">
          {openPractices ? (
            <div className='contentLearning'>Conte√∫do de boas pr√°ticas (ex.: conven√ß√µes, exemplos e recomenda√ß√µes).</div>
          ) : null}
        </div>
      </div>
    </>
  );
};

const MockIcon = ({ children }) => <>{children}</>;

export default function LearningPage() {
  const [docs] = useState([{ id: 1, name: 'README' }]);

  const cardData = [
    { title: 'Stories Maps', icon: <MockIcon>üìä</MockIcon>, expandedText: 'Introdu√ß√£o aos Stories Maps e sua aplica√ß√£o em projetos front-end' },
    { title: 'CODE_OF_CONDUCT.md', expandedText: 'Diretrizes de comportamento para a comunidade GuiaDev. Leia antes de contribuir.' },
    { title: 'CHANGELOG.md', expandedText: 'Hist√≥rico de todas as mudan√ßas e novas funcionalidades do projeto.' },
    { title: 'CONTRIBUTING.md', expandedText: 'Guia completo para quem deseja fazer contribui√ß√µes ao c√≥digo.' },
    { title: '.gitignore', expandedText: 'Lista de arquivos e pastas que o Git deve ignorar ao fazer um commit.' },
    { title: 'README.md', expandedText: 'Ponto de partida do projeto, cont√©m informa√ß√µes essenciais e instala√ß√£o.' },
    { title: 'SUPPORT.md', expandedText: 'Informa√ß√µes sobre como obter suporte ou reportar problemas.' },
    { title: 'SECURITY.md', expandedText: 'Pol√≠tica de seguran√ßa e como relatar vulnerabilidades de forma respons√°vel.' },
    { title: 'GOVERNANCE.md', expandedText: 'Estrutura de governan√ßa e tomada de decis√µes do projeto.' },
    { title: 'Testes/CI', expandedText: 'Documenta√ß√£o sobre a su√≠te de testes e o pipeline de Integra√ß√£o Cont√≠nua (CI).' },
    { title: 'docs/', expandedText: 'Pasta que cont√©m toda a documenta√ß√£o adicional do projeto.' },
  ];

  return (
    <div className='renderPage'>
      <div className='textTitle'>
        <p>Aprendizado</p>
        <p className='subtitle'>Boas pr√°ticas de documenta√ß√£o de projetos de software</p>
      </div>

      <div className='learningPage'>
        <div className='test'>
          <div className="learning">
            {cardData.map((data, index) => (
              <LearningCard key={index} title={data.title} icon={data.icon} expandedText={data.expandedText} />
            ))}
          </div>

          <div className='docsExplain'>
            <div className='titleBox'>Conte√∫do Detalhado</div>
            <div className='boxDocsLearning'>
              {docs.map((doc) => (
                <ExplainDoc key={doc.id} name={doc.name} />
              ))}
            </div>
          </div>
        </div>

        <div className='chat-container'>
          <Chat />
        </div>
      </div>
    </div>
  );
}