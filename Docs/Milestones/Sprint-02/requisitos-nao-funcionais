# Requisitos não funcionais para: Portal de Escrita Técnica em Software

## Principais características de Requisitos não funcionais:

- Usabilidade ( interface intuitiva, facilidade de uso, acessibilidade);
- Confiabilidade ( tolerância a falhas, backup, disponibilidade);
- Desempenho (tempo de resposta, capacidade de usuários simultâneos);
- Segurança ( proteção de dados, autenticação, autorização);
- Portabilidade ( rodar em diferente máquinas, rodar em diferentes sistemas, navegadores);
- Manutenibilidade (facilidade de atualizar, modularidade de código).

### Requisitos Não Funcionais — Portal para Escrita Técnica em Software

**1. Usabilidade**

- O portal deve ter uma interface intuitiva e fácil de entendimento, interface simples, com destaque para os guia e recomendações.
- O sistema deve ser fácil de utilização: pelo menos 80% dos usuários devem conseguir utilizá-lo sem necessidade de treinamento.

**2. Acessibilidade**

- O portal deve seguir padrões WCAG, incluindo contraste adequado, navegação por teclado e suporte a leitores de telas para pessoas PCD.

**3. Confiabilidade**

- O sistema deve exibir recomendações quando algum usuário pesquisar algo dentro do portal, recomendações corretas em pelo menos 95% das varreduras realizadas em repositórios.
- Deve ser capaz de processar repositórios simulados e retornar resultados consistentes.

**4. Desempenho**

- O tempo de carregamento da página deve demorar no máximo 3 segundos.
- A execução dos bots no GitHub deve demorar no máximo 2 minutos para processar os repositórios.

**5. Segurança**

- Toda comunicação entre o usuário e o servidor deve ser feito via protocolo seguro HTTPS.

**6. Portabilidade**

- O portal deve rodar em diferentes navegadores, exemplos: Google Chrome, Firefox, Edge, Opera… etc.
- A interface deve se adaptar a cada desktop conforme o tamanho da tela, exemplos: tablets e celulares.

**7. Manutenibilidade**

- O código do sistema deve estar versionado no GitHub com documentação clara e atualizada.
- A estrutura dos arquivos JSON deve ser modular, facilitando a manutenção e evolução futura dos sistema.

**8. Escalabilidade**

- O sistema deve ser projetado para suportar expansão futura, como inclusão de novos tipos de análises de documentos.
- Deve ser possível adicionar novos checklist sem necessidade de reescrever o sistema inteiros.
